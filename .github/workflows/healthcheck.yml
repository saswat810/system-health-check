name: Multi-Platform System Health Check

on:
  workflow_dispatch:
  push:

jobs:
  # -----------------------------
  # Linux containers (matrix)
  # -----------------------------
  linux-containers:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        container: [ubuntu:latest, debian:latest, rockylinux:9, almalinux:9, alpine:latest]
    container: ${{ matrix.container }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Ensure healthcheck.sh is executable
        run: |
          ls -la
          chmod +x healthcheck.sh || true

      - name: Install basic tools (if available)
        run: |
          if command -v apt-get >/dev/null 2>&1; then
            apt-get update -y || true
            apt-get install -y procps coreutils util-linux net-tools iproute2 psmisc bash || true
          elif command -v apk >/dev/null 2>&1; then
            apk add --no-cache procps coreutils util-linux iproute2 psmisc bash || true
          elif command -v yum >/dev/null 2>&1; then
            yum install -y procps-ng coreutils net-tools iproute psmisc bash || true
          fi

      - name: Run health check script
        run: |
          ./healthcheck.sh
        # If your script requires a different shell, you can set `shell: bash`

      - name: Create sanitized artifact name and set to GITHUB_ENV
        run: |
          # Replace colon (:) with dash (-) to make artifact name filesystem-safe
          SANITIZED="$(echo '${{ matrix.container }}' | tr ':' '-')"
          echo "ART_NAME=healthlog-${SANITIZED}" >> $GITHUB_ENV
          echo "Set ART_NAME=healthlog-${SANITIZED}"
      
      - name: Upload log file (Linux container)
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ART_NAME }}
          path: healthlog.txt
          if-no-files-found: warn

  # -----------------------------
  # Windows runner
  # -----------------------------
  windows:
    runs-on: windows-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Generate Windows healthlog.txt
        shell: pwsh
        run: |
          $logFile = "healthlog.txt"
          "=============================================" | Out-File $logFile
          "System Health Check (Windows) - $(Get-Date)" | Out-File $logFile -Append
          "=============================================" | Out-File $logFile -Append

          "`nOS Information:" | Out-File $logFile -Append
          systeminfo | findstr /B /C:"OS Name" /C:"OS Version" | Out-File $logFile -Append

          "`nUptime:" | Out-File $logFile -Append
          (Get-CimInstance Win32_OperatingSystem).LastBootUpTime | Out-File $logFile -Append

          "`nCPU Info:" | Out-File $logFile -Append
          Get-CimInstance Win32_Processor | Select-Object -Property Name,LoadPercentage | Out-File $logFile -Append

          "`nMemory Usage (MB):" | Out-File $logFile -Append
          Get-CimInstance Win32_OperatingSystem | Select-Object TotalVisibleMemorySize,FreePhysicalMemory | Out-File $logFile -Append

          "`nDisk Usage:" | Out-File $logFile -Append
          Get-PSDrive -PSProvider 'FileSystem' | Select-Object Name,Used,Free | Out-File $logFile -Append

          "`nTop Processes by Memory:" | Out-File $logFile -Append
          Get-Process | Sort-Object -Descending WS | Select-Object -First 5 Name,CPU,WS | Out-File $logFile -Append

          "`nService Status (wuauserv, sshd):" | Out-File $logFile -Append
          # If sshd is not installed this will show as NotFound; keep it as example
          Get-Service -Name wuauserv, sshd -ErrorAction SilentlyContinue | Select-Object Name,Status | Out-File $logFile -Append

      - name: Upload Windows Log
        uses: actions/upload-artifact@v4
        with:
          name: healthlog-windows
          path: healthlog.txt
          if-no-files-found: warn

  # -----------------------------
  # macOS runner
  # -----------------------------
  macos:
    runs-on: macos-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Run macOS health check and write to file
        run: |
          {
            echo "============================================="
            echo "System Health Check (macOS) - $(date)"
            echo "============================================="
            echo
            echo "System Uptime:"
            uptime
            echo
            echo "CPU Load:"
            sysctl -n vm.loadavg || true
            echo
            echo "Memory Usage:"
            vm_stat || true
            echo
            echo "Disk Usage:"
            df -h
            echo
            echo "Top 5 Memory Consuming Processes:"
            ps aux | sort -nrk 4 | head -n 6
          } > healthlog.txt

      - name: Upload macOS Log
        uses: actions/upload-artifact@v4
        with:
          name: healthlog-macos
          path: healthlog.txt
          if-no-files-found: warn